

#ifndef SDL_font_h_
#define SDL_font_h_

#include <map>
#include <vector>
//#include "begin_code.h"

/* Function prototypes */

#define FONT_CHARACTER_SIZE  8

/**
 *  \brief Draw a string in the currently set font.
 *
 *  \param renderer The renderer to draw on.
 *  \param x The X coordinate of the upper left corner of the character.
 *  \param y The Y coordinate of the upper left corner of the character.
 *  \param c The character to draw.
 *
 *  \returns Returns 0 on success, -1 on failure.
 */
int SDL_DrawCharacter(SDL_Renderer *renderer, int x, int y, char c, int size, bool flip, SDL_Color * col) ;

/**
 *  \brief Draw a string in the currently set font.
 *
 *  \param renderer The renderer to draw on.
 *  \param x The X coordinate of the upper left corner of the string.
 *  \param y The Y coordinate of the upper left corner of the string.
 *  \param s The string to draw.
 *
 *  \returns Returns 0 on success, -1 on failure.
 */
int SDL_DrawString(SDL_Renderer * renderer, int x, int y, const char *s, int size, SDL_Color * col);

int SDL_DrawString_Flip(SDL_Renderer * renderer, int x, int y, const char *s, int size, SDL_Color * col);
/**
 *  \brief Cleanup textures used by font drawing functions.
 */
void SDL_CleanupTextDrawing(void);

/* Ends C function definitions when using C++ */

//dump.h
/////////////////////////////////


#include <stdio.h>
#include <stdarg.h>    


#define BYTE unsigned char


#define LOG_CALL  myPrintf("%s:%s\n", __FILE__, __func__)


void myPrintf(const char *fmt, ...);




int log_set_file(const char* filename);


   

////////////////////////////////////









/// linked_list.h
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
        linked_list.h

        Build custom linked list, push new element, clear and print items

        @author Arvid Umrao <akumrao@yahoo.com> <arvind.umrao@harman.com>
        @version 0.1
 */
#ifndef LLIST
#define LLIST



//--------------CAPTION STRUCT --------------
typedef struct Caption_item Caption_item;

struct Caption_item {
    const char * caption_txt;
    int caption_id;
    int caption_color;
    struct Caption_item *nxt;
};

typedef Caption_item* captionlist;
//----------------------------------------

struct Pair {
    float x;
    float y;

    Pair() : x(0), y(0) {
    }

    Pair(float ix, float iy) : x(ix), y(iy) {
    }
    
     Pair (std::initializer_list<float> l)
     {
         if(  l.size() != 2)
             throw "Pair does not have enough values";
                 
         const float *it  = l.begin();
         x = *it ;
         y = *(++it);
         
     }
     
};

//-------------COORDINATE STRUCT ------------
typedef struct Coordinate_item Coordinate_item;

struct Coordinate_item {
    float x;
    float y;
    int caption_id;
    struct Coordinate_item *nxt;

    Coordinate_item() : nxt(0) {
    }

    int count() {
        int nc = 0;
        ++nc;
        Coordinate_item* temp = nxt;
        while (temp != NULL) {
            ++nc;
            temp = temp->nxt;
        }

        return nc;
    }

    Pair min() {
        Pair nc(x, y);
        Coordinate_item* temp = nxt;
        while (temp != NULL) {

            if (nc.x > temp->x) {
                nc.x = temp->x;
            }
            if (nc.y > temp->y) {
                nc.y = temp->y;
            }

            temp = temp->nxt;
        }


        return nc;

    }

    Pair max() {
        Pair nc(x, y);
        Coordinate_item* temp = nxt;
        while (temp != NULL) {

            if (nc.x < temp->x) {
                nc.x = temp->x;
            }
            if (nc.y < temp->y) {
                nc.y = temp->y;
            }

            // ++ nc;
            temp = temp->nxt;
        }

        return nc;
    }


};

typedef Coordinate_item* coordlist;
//----------------------------------------



//-------------Plot parameter structure  ------------

typedef struct Plot_params_struct {
    int screen_width;
    int screen_heigth;
    //const char  *      plot_title ;
    //char *      font_text_path    ;
    //int         font_text_size    ;
    const char * caption_text_x;
    const char * caption_text_y;
    captionlist caption_list;
    coordlist coordinate_list;
    SDL_Texture *texTarget;
    Pair scale;
    Pair max;
    Pair min;
    bool dot;
    bool grid;
    bool update;
    SDL_Rect plot_caption_position;
    SDL_Rect plot_position;
    std::map< int, std::vector< SDL_Point > > points;
    
    float scale_x_num ;
    float scale_y_num ;
    
    int colPos;
    int rowPos;
    
     void clean()
    {
        
         for(auto& kv : points)
         {
             
            kv.second.clear();
          
         }
    }
    
     
    void pop( int id)
    {
       if (!points[id].empty())
        points[id].erase(points[id].begin());
     }
    void push_back( int id,  float *points, int size)
    {
         
         for(int i=0; i < size ; ++i)
         {
         
           push_back( id, i, points[i]);
          
         }
        
    }   
    void push_back( int id, float x, float y)
    {
        
        int _x1 = colPos +plot_position.x + ((x - min.x) / scale.x) * scale_x_num;
        int _y1 = rowPos +plot_position.y + plot_position.h - ((y - min.y) / scale.y) * scale_y_num;

        myPrintf("(%d , %d)", _x1 , _y1 );
        
        points[id].push_back( { _x1 , _y1 } );
    }

    Plot_params_struct(const char * caption_x, const char * caption_y, captionlist caption_lst, coordlist coordinate_lst, int w=400, int h=400, Pair lscale={0,0}, Pair lmax={0,0}, Pair lmin={0,0} ) : update(true),texTarget(NULL), screen_width(w), screen_heigth(h), scale(lscale), max(lmax), min(lmin), scale_x_num(0), scale_y_num(0), colPos(0),rowPos(0) {

        dot = false;
        grid= true;

        caption_text_x = caption_x;
        caption_text_y = caption_y;
        caption_list = caption_lst;
        coordinate_list = coordinate_lst;
       
        
        if(coordinate_lst && max.x ==0)
        {
            max = coordinate_lst->max();
            min = coordinate_lst->min();
            
            scale.x = (max.x - min.x)/8;
            scale.y = (max.y - min.y)/8;        
            
            // scale TOB 
        }
       
        
        float plot_width = screen_width * 0.8;
        float plot_heigth = screen_heigth * 0.8;
        float plot_caption_heigth = screen_heigth * 0.05;
 
   
        plot_position.x = (screen_width / 2)-(plot_width * 0.47);
        plot_position.y = (screen_heigth * 0.50)-(plot_heigth / 2);
        plot_position.w = plot_width;
        plot_position.h = plot_heigth;
       
        plot_caption_position.x = plot_position.x;
        plot_caption_position.y = plot_position.y - 20 - plot_caption_heigth;
        plot_caption_position.w = plot_width;
        plot_caption_position.h = plot_caption_heigth;
      
         if(!scale_x_num)
        scale_x_num = plot_position.w / ((max.x - min.x) / scale.x);
        if(!scale_y_num)
        scale_y_num = plot_position.h / ((max.y - min.y) / scale.y);
    }
        
} plot_params;



typedef struct Plot_Window_params Plot_Window_params;

struct Plot_Window_params {
    plot_params * plotparm;
    Plot_Window_params *nxt;

    int count() {
        int nc = 0;

        if (plotparm)
            ++nc;
        Plot_Window_params* temp = nxt;
        while (temp != NULL) {
            ++nc;
            temp = temp->nxt;
        }

        return nc;
    }
};

typedef Plot_Window_params* plotwinlist;




//----------------------------------------
template <typename T>
coordlist push_back_coords(coordlist list, int caption_id, T *points, int size) {

    for (int i = 0; i < size; ++i) {

        list = push_back_coord(list, caption_id, i, points[i]);

    }
    
    return list;
}
    
/**
 * @brief push_back_coord
 *      push a new item to the end of coordinate table
 * @param list
 *      list of coordinate items
 * @param x
 *      x coordinate
 * @param y
 *      y coordinate
 */
coordlist push_back_coord(coordlist list, int caption_id, float x, float y);

/**
 * @brief print_list_coord
 *      print coordinate table
 * @param list
 *      list of coordinate items
 */
void print_list_coord(coordlist list);

/**
 * @brief clear_coord
 *      clear coordinate table
 * @param list
 *      list of coordinate items
 */
coordlist clear_coord(coordlist list);

/**
 * @brief push_back_caption
 *      push a new item to the end of caption table
 * @param list std::vector< SDL_Point > points;
 *      list of caption items
 * @param caption_txt
 *      caption text
 * @param caption_id
 *      caption id
 * @param color
 *      caption color
 */
captionlist push_back_caption(captionlist list, const char * caption_txt, int caption_id, int color);

/**
 * @brief print_list_caption
 *      print caption table
 * @param list
 *      list of caption items
 */
void print_list_caption(captionlist list);

/**
 * @brief clear_caption
 *      clear caption table
 * @param list
 *      list of caption items
 */
captionlist clear_caption(captionlist list);

/**
 * @brief push_back_surface
 *      push a new item to the end of surface table
 * @param list
 *      list of surface items
 * @param surface
 *      SDL surface ptr
 */


/**
 * @brief clear_surface
 *      clear surface table
 * @param list
 *      list of surface items
 */



plotwinlist push_back_plot_win(plotwinlist list, plot_params* plotparm);

plotwinlist clear_plot_win(plotwinlist list);



#endif

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//font_basic.h
////////////////////////////////////////////////////////////////////////////////////////////////////
 static unsigned char font16x16_basic[128][32] = { 
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+0000 (nul)
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+0001
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+0002
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+0003
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+0004
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+0005
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+0006
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+0007
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+0008
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+0009
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+000A
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+000B
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+000C
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+000D
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+000E
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+000F
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+0010
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+0011
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+0012
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+0013
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+0014
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+0015
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+0016
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+0017
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+0018
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+0019
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+001A
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+001B
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+001C
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+001D
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+001E
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},   // U+001F
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, //  <Space>
    {0x00,0x00,0x00,0x00,0x07,0x00,0x0F,0x80,0x0F,0x80,0x0F,0x80,0x0F,0x80,0x0F,0x80,0x07,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x07,0x00,0x07,0x00,0x00,0x00}, // !
    {0x00,0x00,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x06,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, // "
    {0x00,0x00,0x0C,0x30,0x0C,0x30,0x0C,0x30,0x7F,0xFE,0x7F,0xFE,0x0C,0x30,0x0C,0x30,0x0C,0x30,0x0C,0x30,0x7F,0xFE,0x7F,0xFE,0x0C,0x30,0x0C,0x30,0x0C,0x30,0x00,0x00}, // #
    {0x00,0x00,0x02,0x40,0x02,0x40,0x0F,0xF8,0x1F,0xF8,0x1A,0x40,0x1A,0x40,0x1F,0xF0,0x0F,0xF8,0x02,0x58,0x02,0x58,0x1F,0xF8,0x1F,0xF0,0x02,0x40,0x02,0x40,0x00,0x00}, // $
    {0x00,0x00,0x00,0x00,0x00,0x00,0x0E,0x10,0x0E,0x30,0x0E,0x70,0x00,0xE0,0x01,0xC0,0x03,0x80,0x07,0x00,0x0E,0x70,0x0C,0x70,0x08,0x70,0x00,0x00,0x00,0x00,0x00,0x00}, // %
    {0x00,0x00,0x00,0x00,0x0F,0x00,0x19,0x80,0x19,0x80,0x19,0x80,0x0F,0x00,0x0F,0x08,0x0F,0x98,0x19,0xF8,0x18,0xF0,0x18,0xE0,0x19,0xF0,0x0F,0x98,0x00,0x00,0x00,0x00}, // &
    {0x00,0x00,0x00,0x00,0x07,0x00,0x07,0x00,0x07,0x00,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, // '
    {0x00,0x00,0x00,0x00,0x00,0xF0,0x01,0xC0,0x03,0x80,0x07,0x00,0x0E,0x00,0x0E,0x00,0x0E,0x00,0x0E,0x00,0x07,0x00,0x03,0x80,0x01,0xC0,0x00,0xF0,0x00,0x00,0x00,0x00}, // (
    {0x00,0x00,0x00,0x00,0x0F,0x00,0x03,0x80,0x01,0xC0,0x00,0xE0,0x00,0x70,0x00,0x70,0x00,0x70,0x00,0x70,0x00,0xE0,0x01,0xC0,0x03,0x80,0x0F,0x00,0x00,0x00,0x00,0x00}, // )
    {0x00,0x00,0x00,0x00,0x01,0x80,0x11,0x88,0x09,0x90,0x07,0xE0,0x07,0xE0,0x3F,0xFC,0x3F,0xFC,0x07,0xE0,0x07,0xE0,0x09,0x90,0x11,0x88,0x01,0x80,0x00,0x00,0x00,0x00}, // *
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x80,0x01,0x80,0x01,0x80,0x0F,0xF0,0x0F,0xF0,0x01,0x80,0x01,0x80,0x01,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, // +
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x07,0x00,0x07,0x00,0x0E,0x00,0x00,0x00}, // ,
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xF8,0x1F,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, // -
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x07,0x00,0x07,0x00,0x00,0x00,0x00,0x00}, // ,
    {0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x06,0x00,0x0E,0x00,0x1C,0x00,0x38,0x00,0x70,0x00,0xE0,0x01,0xC0,0x03,0x80,0x07,0x00,0x0E,0x00,0x1C,0x00,0x00,0x00,0x00,0x00}, // /
    {0x00,0x00,0x00,0x00,0x0F,0xF0,0x1C,0x38,0x1C,0x78,0x1C,0xF8,0x1C,0xF8,0x1D,0xB8,0x1D,0xB8,0x1F,0x38,0x1F,0x38,0x1E,0x38,0x1C,0x38,0x0F,0xF0,0x00,0x00,0x00,0x00}, // 0
    {0x00,0x00,0x00,0x00,0x01,0x80,0x01,0x80,0x03,0x80,0x1F,0x80,0x1F,0x80,0x03,0x80,0x03,0x80,0x03,0x80,0x03,0x80,0x03,0x80,0x03,0x80,0x1F,0xF0,0x00,0x00,0x00,0x00}, // 1
    {0x00,0x00,0x00,0x00,0x0F,0xE0,0x1C,0x70,0x1C,0x38,0x00,0x38,0x00,0x70,0x00,0xE0,0x01,0xC0,0x03,0x80,0x07,0x00,0x0E,0x38,0x1C,0x38,0x1F,0xF8,0x00,0x00,0x00,0x00}, // 2
    {0x00,0x00,0x00,0x00,0x0F,0xE0,0x1C,0x70,0x1C,0x38,0x00,0x38,0x00,0x70,0x03,0xC0,0x03,0xC0,0x00,0x70,0x00,0x38,0x1C,0x38,0x1C,0x70,0x0F,0xE0,0x00,0x00,0x00,0x00}, // 3
    {0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0xE0,0x03,0xE0,0x06,0xE0,0x0C,0xE0,0x18,0xE0,0x1F,0xF8,0x1F,0xF8,0x00,0xE0,0x00,0xE0,0x00,0xE0,0x03,0xF8,0x00,0x00,0x00,0x00}, // 4
    {0x00,0x00,0x00,0x00,0x1F,0xF8,0x1C,0x00,0x1C,0x00,0x1C,0x00,0x1C,0x00,0x1F,0xE0,0x1F,0xF0,0x00,0x78,0x00,0x38,0x1C,0x38,0x1C,0x70,0x0F,0xE0,0x00,0x00,0x00,0x00}, // 5
    {0x00,0x00,0x00,0x00,0x03,0xE0,0x07,0x00,0x0E,0x00,0x1C,0x00,0x1C,0x00,0x1F,0xF0,0x1F,0xF8,0x1C,0x38,0x1C,0x38,0x1C,0x38,0x1C,0x38,0x0F,0xF0,0x00,0x00,0x00,0x00}, // 6
    {0x00,0x00,0x00,0x00,0x1F,0xFC,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x00,0x1C,0x00,0x38,0x00,0x70,0x00,0xE0,0x01,0xC0,0x03,0x80,0x03,0x80,0x03,0x80,0x00,0x00,0x00,0x00}, // 7
    {0x00,0x00,0x00,0x00,0x0F,0xF0,0x1C,0x38,0x1C,0x38,0x1C,0x38,0x1F,0x38,0x07,0xE0,0x07,0xE0,0x1C,0xF8,0x1C,0x38,0x1C,0x38,0x1C,0x38,0x0F,0xF0,0x00,0x00,0x00,0x00}, // 8
    {0x00,0x00,0x00,0x00,0x0F,0xF0,0x1C,0x38,0x1C,0x38,0x1C,0x38,0x1C,0x38,0x1F,0xF8,0x0F,0xF8,0x00,0x38,0x00,0x38,0x00,0x70,0x00,0xE0,0x07,0xC0,0x00,0x00,0x00,0x00}, // 9
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x80,0x03,0x80,0x03,0x80,0x00,0x00,0x00,0x00,0x03,0x80,0x03,0x80,0x03,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, // :
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x80,0x03,0x80,0x03,0x80,0x00,0x00,0x00,0x00,0x03,0x80,0x03,0x80,0x03,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, // ;
    {0x00,0x00,0x00,0x70,0x00,0xE0,0x01,0xC0,0x03,0x80,0x07,0x00,0x0E,0x00,0x1C,0x00,0x1C,0x00,0x0E,0x00,0x07,0x00,0x03,0x80,0x01,0xC0,0x00,0xE0,0x00,0x70,0x00,0x00}, // <
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xFC,0x3F,0xFC,0x00,0x00,0x00,0x00,0x3F,0xFC,0x3F,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, // =
    {0x00,0x00,0x1C,0x00,0x0E,0x00,0x07,0x00,0x03,0x80,0x01,0xC0,0x00,0xE0,0x00,0x70,0x00,0x70,0x00,0xE0,0x01,0xC0,0x03,0x80,0x07,0x00,0x0E,0x00,0x1C,0x00,0x00,0x00}, // >
    {0x00,0x00,0x03,0xC0,0x0F,0xF0,0x1E,0x78,0x18,0x38,0x00,0x38,0x00,0x70,0x00,0xE0,0x01,0xC0,0x01,0xC0,0x00,0x00,0x00,0x00,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x00,0x00}, // ?
    {0x00,0x00,0x0F,0xF8,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0xFC,0x1C,0xFC,0x1C,0xFC,0x1C,0xFC,0x1C,0x00,0x1C,0x00,0x1C,0x00,0x1F,0xF0,0x07,0xF8,0x00,0x00}, // @
    {0x00,0x00,0x00,0x00,0x03,0xC0,0x07,0xE0,0x0E,0x70,0x1C,0x38,0x1C,0x38,0x1C,0x38,0x1C,0x38,0x1F,0xF8,0x1C,0x38,0x1C,0x38,0x1C,0x38,0x1C,0x38,0x00,0x00,0x00,0x00}, // A
    {0x00,0x00,0x00,0x00,0x1F,0xF0,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x0F,0xF0,0x0F,0xF0,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x1F,0xF0,0x00,0x00,0x00,0x00}, // B
    {0x00,0x00,0x00,0x00,0x07,0xF0,0x0E,0x38,0x1C,0x38,0x1C,0x00,0x1C,0x00,0x1C,0x00,0x1C,0x00,0x1C,0x00,0x1C,0x00,0x1C,0x38,0x0E,0x38,0x07,0xF0,0x00,0x00,0x00,0x00}, // C
    {0x00,0x00,0x00,0x00,0x1F,0xE0,0x0E,0x70,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x0E,0x70,0x1F,0xE0,0x00,0x00,0x00,0x00}, // D
    {0x00,0x00,0x00,0x00,0x1F,0xF8,0x0E,0x18,0x0E,0x08,0x0E,0x00,0x0E,0x30,0x0F,0xF0,0x0F,0xF0,0x0E,0x30,0x0E,0x00,0x0E,0x08,0x0E,0x18,0x1F,0xF8,0x00,0x00,0x00,0x00}, // E
    {0x00,0x00,0x00,0x00,0x1F,0xF8,0x0E,0x18,0x0E,0x08,0x0E,0x00,0x0E,0x30,0x0F,0xF0,0x0F,0xF0,0x0E,0x30,0x0E,0x00,0x0E,0x00,0x0E,0x00,0x1F,0x00,0x00,0x00,0x00,0x00}, // F
    {0x00,0x00,0x00,0x00,0x07,0xF0,0x0E,0x38,0x1C,0x38,0x1C,0x38,0x1C,0x00,0x1C,0x00,0x1C,0x00,0x1C,0xF8,0x1C,0x38,0x1C,0x38,0x0E,0x38,0x07,0xF8,0x00,0x00,0x00,0x00}, // G
    {0x00,0x00,0x00,0x00,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1F,0xF0,0x1F,0xF0,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x00,0x00,0x00,0x00}, // H
    {0x00,0x00,0x00,0x00,0x0F,0xE0,0x03,0x80,0x03,0x80,0x03,0x80,0x03,0x80,0x03,0x80,0x03,0x80,0x03,0x80,0x03,0x80,0x03,0x80,0x03,0x80,0x0F,0xE0,0x00,0x00,0x00,0x00}, // I
    {0x00,0x00,0x00,0x00,0x01,0xFC,0x00,0x70,0x00,0x70,0x00,0x70,0x00,0x70,0x00,0x70,0x00,0x70,0x38,0x70,0x38,0x70,0x38,0x70,0x38,0x70,0x0F,0xE0,0x00,0x00,0x00,0x00}, // J
    {0x00,0x00,0x00,0x00,0x1E,0x38,0x0E,0x38,0x0E,0x70,0x0E,0xE0,0x0F,0xC0,0x0F,0x80,0x0F,0x80,0x0F,0xC0,0x0E,0xE0,0x0E,0x70,0x0E,0x38,0x1E,0x38,0x00,0x00,0x00,0x00}, // K
    {0x00,0x00,0x00,0x00,0x1F,0x00,0x0E,0x00,0x0E,0x00,0x0E,0x00,0x0E,0x00,0x0E,0x00,0x0E,0x00,0x0E,0x00,0x0E,0x08,0x0E,0x18,0x0E,0x38,0x1F,0xF8,0x00,0x00,0x00,0x00}, // L
    {0x00,0x00,0x00,0x00,0x1C,0x1C,0x1E,0x3C,0x1F,0x7C,0x1F,0xFC,0x1F,0xFC,0x1D,0xDC,0x1C,0x9C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x00,0x00,0x00,0x00}, // M
    {0x00,0x00,0x00,0x00,0x1C,0x1C,0x1C,0x1C,0x1E,0x1C,0x1F,0x1C,0x1F,0x9C,0x1D,0xDC,0x1C,0xFC,0x1C,0x7C,0x1C,0x3C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x00,0x00,0x00,0x00}, // N
    {0x00,0x00,0x00,0x00,0x03,0xE0,0x07,0xF0,0x0E,0x38,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x0E,0x38,0x07,0xF0,0x03,0xE0,0x00,0x00,0x00,0x00}, // O
    {0x00,0x00,0x00,0x00,0x1F,0xF0,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x0F,0xF0,0x0F,0xF0,0x0E,0x00,0x0E,0x00,0x0E,0x00,0x0E,0x00,0x1F,0x00,0x00,0x00,0x00,0x00}, // P
    {0x00,0x00,0x00,0x00,0x03,0xE0,0x0F,0x78,0x0E,0x38,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x7C,0x1C,0xFC,0x0F,0xF8,0x0F,0xF8,0x00,0x38,0x00,0xFC,0x00,0x00}, // Q
    {0x00,0x00,0x00,0x00,0x1F,0xF0,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x0F,0xF0,0x0F,0xF0,0x0E,0x70,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x1E,0x38,0x00,0x00,0x00,0x00}, // R
    {0x00,0x00,0x00,0x00,0x0F,0xF0,0x1C,0x38,0x1C,0x38,0x1C,0x38,0x1C,0x00,0x0F,0xE0,0x07,0xF0,0x00,0x38,0x1C,0x38,0x1C,0x38,0x1C,0x38,0x0F,0xF0,0x00,0x00,0x00,0x00}, // S
    {0x00,0x00,0x00,0x00,0x1F,0xFC,0x19,0xCC,0x11,0xC4,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x07,0xF0,0x00,0x00,0x00,0x00}, // T
    {0x00,0x00,0x00,0x00,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x0F,0xE0,0x00,0x00,0x00,0x00}, // U
    {0x00,0x00,0x00,0x00,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x0E,0xE0,0x07,0xC0,0x03,0x80,0x00,0x00,0x00,0x00}, // V
    {0x00,0x00,0x00,0x00,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x9C,0x1C,0x9C,0x1C,0x9C,0x0F,0xF8,0x0F,0xF8,0x07,0x70,0x07,0x70,0x00,0x00,0x00,0x00}, // W
    {0x00,0x00,0x00,0x00,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x0E,0xE0,0x07,0xC0,0x03,0x80,0x03,0x80,0x07,0xC0,0x0E,0xE0,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x00,0x00,0x00,0x00}, // X
    {0x00,0x00,0x00,0x00,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x0E,0xE0,0x07,0xC0,0x03,0x80,0x03,0x80,0x03,0x80,0x03,0x80,0x0F,0xE0,0x00,0x00,0x00,0x00}, // Y
    {0x00,0x00,0x00,0x00,0x1F,0xF8,0x1C,0x38,0x18,0x38,0x10,0x70,0x00,0xE0,0x01,0xC0,0x03,0x80,0x07,0x00,0x0E,0x08,0x1C,0x18,0x1C,0x38,0x1F,0xF8,0x00,0x00,0x00,0x00}, // Z
    {0x00,0x00,0x00,0x00,0x07,0xF0,0x07,0x00,0x07,0x00,0x07,0x00,0x07,0x00,0x07,0x00,0x07,0x00,0x07,0x00,0x07,0x00,0x07,0x00,0x07,0x00,0x07,0xF0,0x00,0x00,0x00,0x00}, // [
    {0x00,0x00,0x00,0x00,0x10,0x00,0x18,0x00,0x1C,0x00,0x0E,0x00,0x07,0x00,0x03,0x80,0x01,0xC0,0x00,0xE0,0x00,0x70,0x00,0x38,0x00,0x1C,0x00,0x07,0x00,0x00,0x00,0x00}, // <Backslash>
    {0x00,0x00,0x00,0x00,0x07,0xF0,0x00,0x70,0x00,0x70,0x00,0x70,0x00,0x70,0x00,0x70,0x00,0x70,0x00,0x70,0x00,0x70,0x00,0x70,0x00,0x70,0x07,0xF0,0x00,0x00,0x00,0x00}, // ]
    {0x00,0x00,0x01,0x80,0x03,0xC0,0x07,0xE0,0x0E,0x70,0x1C,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, // ^
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xFF,0x7F,0xFF}, // _
    {0x00,0x00,0x00,0x00,0x1C,0x00,0x1C,0x00,0x07,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, // '
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xE0,0x00,0x70,0x00,0x70,0x0F,0xF0,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x0F,0xD8,0x00,0x00,0x00,0x00}, // a
    {0x00,0x00,0x00,0x00,0x1E,0x00,0x0E,0x00,0x0E,0x00,0x0E,0x00,0x0F,0xF0,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x1B,0xF0,0x00,0x00,0x00,0x00}, // b
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xE0,0x1C,0x70,0x1C,0x70,0x1C,0x00,0x1C,0x00,0x1C,0x70,0x1C,0x70,0x0F,0xE0,0x00,0x00,0x00,0x00}, // c
    {0x00,0x00,0x00,0x00,0x00,0xF8,0x00,0x70,0x00,0x70,0x00,0x70,0x0F,0xF0,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x0F,0xD8,0x00,0x00,0x00,0x00}, // d
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xE0,0x1C,0x70,0x1C,0x70,0x1F,0xF0,0x1C,0x00,0x1C,0x70,0x1C,0x70,0x0F,0xE0,0x00,0x00,0x00,0x00}, // e
    {0x00,0x00,0x00,0x00,0x03,0xE0,0x07,0x70,0x07,0x70,0x07,0x00,0x07,0x00,0x1F,0xE0,0x1F,0xE0,0x07,0x00,0x07,0x00,0x07,0x00,0x07,0x00,0x1F,0xC0,0x00,0x00,0x00,0x00}, // f
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xD8,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x0F,0xF0,0x07,0xF0,0x00,0x70,0x1C,0x70,0x0F,0xE0}, // g
    {0x00,0x00,0x00,0x00,0x1E,0x00,0x0E,0x00,0x0E,0x00,0x0E,0x00,0x0E,0xF0,0x0F,0x38,0x0F,0x38,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x1E,0x38,0x00,0x00,0x00,0x00}, // h
    {0x00,0x00,0x00,0x00,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x00,0x00,0x0F,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x0F,0xF8,0x00,0x00,0x00,0x00}, // i
    {0x00,0x00,0x00,0x00,0x00,0x70,0x00,0x70,0x00,0x70,0x00,0x00,0x03,0xF0,0x00,0x70,0x00,0x70,0x00,0x70,0x00,0x70,0x00,0x70,0x00,0x70,0x1C,0x70,0x0C,0xF0,0x07,0xE0}, // j
    {0x00,0x00,0x00,0x00,0x1E,0x00,0x0E,0x00,0x0E,0x00,0x0E,0x00,0x0E,0x38,0x0E,0x70,0x0E,0xE0,0x0F,0xC0,0x0E,0xE0,0x0E,0x70,0x0E,0x38,0x1E,0x38,0x00,0x00,0x00,0x00}, // k
    {0x00,0x00,0x00,0x00,0x0F,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x0F,0xF8,0x00,0x00,0x00,0x00}, // l
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xF8,0x1C,0x9C,0x1C,0x9C,0x1C,0x9C,0x1C,0x9C,0x1C,0x9C,0x1C,0x9C,0x1C,0x9C,0x00,0x00,0x00,0x00}, // m
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xE0,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x00,0x00,0x00,0x00}, // n
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xE0,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x0F,0xE0,0x00,0x00,0x00,0x00}, // o
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1B,0xF0,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x0F,0xF0,0x0E,0x00,0x0E,0x00,0x1F,0x00}, // p
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xB0,0x38,0xE0,0x38,0xE0,0x38,0xE0,0x38,0xE0,0x38,0xE0,0x1F,0xE0,0x00,0xE0,0x00,0xE0,0x01,0xF0}, // q
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1E,0xF0,0x0F,0xF8,0x0F,0x38,0x0E,0x00,0x0E,0x00,0x0E,0x00,0x0E,0x00,0x1F,0x00,0x00,0x00,0x00,0x00}, // r
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xE0,0x1C,0x30,0x1C,0x30,0x0F,0x80,0x03,0xE0,0x18,0x70,0x18,0x70,0x0F,0xE0,0x00,0x00,0x00,0x00}, // s
    {0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x03,0x00,0x07,0x00,0x1F,0xF0,0x07,0x00,0x07,0x00,0x07,0x00,0x07,0x00,0x07,0x70,0x07,0x70,0x03,0xE0,0x00,0x00,0x00,0x00}, // t
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x0F,0xD8,0x00,0x00,0x00,0x00}, // u
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x70,0x0E,0xE0,0x07,0xC0,0x03,0x80,0x00,0x00,0x00,0x00}, // v
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x9C,0x1C,0x9C,0x0F,0xF8,0x07,0x70,0x07,0x70,0x00,0x00,0x00,0x00}, // w
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0xE0,0x1C,0xE0,0x0F,0xC0,0x07,0x80,0x07,0x80,0x0F,0xC0,0x1C,0xE0,0x1C,0xE0,0x00,0x00,0x00,0x00}, // x
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x0E,0x38,0x07,0xF0,0x03,0xE0,0x00,0xE0,0x01,0xC0,0x1F,0x80}, // y
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xE0,0x18,0xE0,0x11,0xC0,0x03,0x80,0x07,0x00,0x0E,0x20,0x1C,0x60,0x1F,0xE0,0x00,0x00,0x00,0x00}, // z
    {0x00,0x00,0x00,0x00,0x01,0xF8,0x03,0x80,0x03,0x80,0x03,0x80,0x07,0x00,0x1C,0x00,0x1C,0x00,0x07,0x00,0x03,0x80,0x03,0x80,0x03,0x80,0x01,0xF8,0x00,0x00,0x00,0x00}, // {
    {0x00,0x00,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x00,0x00}, // |
    {0x00,0x00,0x00,0x00,0x1F,0x80,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x00,0xE0,0x00,0x38,0x00,0x38,0x00,0xE0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x1F,0x80,0x00,0x00,0x00,0x00}, // }
    {0x00,0x00,0x00,0x00,0x1F,0x1C,0x3B,0x9C,0x39,0xDC,0x38,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},  // ~
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}
};



 static unsigned char font8x8_basic[128][8]  = {

    /*
     * 0 0x00 '^@'
     */{
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00}, /* 00000000 */

    /*
     * 1 0x01 '^A'
     */{
    0x7e, /* 01111110 */
    0x81, /* 10000001 */
    0xa5, /* 10100101 */
    0x81, /* 10000001 */
    0xbd, /* 10111101 */
    0x99, /* 10011001 */
    0x81, /* 10000001 */
    0x7e}, /* 01111110 */

    /*
     * 2 0x02 '^B'
     */{
    0x7e, /* 01111110 */
    0xff, /* 11111111 */
    0xdb, /* 11011011 */
    0xff, /* 11111111 */
    0xc3, /* 11000011 */
    0xe7, /* 11100111 */
    0xff, /* 11111111 */
    0x7e}, /* 01111110 */

    /*
     * 3 0x03 '^C'
     */{
    0x6c, /* 01101100 */
    0xfe, /* 11111110 */
    0xfe, /* 11111110 */
    0xfe, /* 11111110 */
    0x7c, /* 01111100 */
    0x38, /* 00111000 */
    0x10, /* 00010000 */
    0x00}, /* 00000000 */

    /*
     * 4 0x04 '^D'
     */{
    0x10, /* 00010000 */
    0x38, /* 00111000 */
    0x7c, /* 01111100 */
    0xfe, /* 11111110 */
    0x7c, /* 01111100 */
    0x38, /* 00111000 */
    0x10, /* 00010000 */
    0x00}, /* 00000000 */

    /*
     * 5 0x05 '^E'
     */{
    0x38, /* 00111000 */
    0x7c, /* 01111100 */
    0x38, /* 00111000 */
    0xfe, /* 11111110 */
    0xfe, /* 11111110 */
    0xd6, /* 11010110 */
    0x10, /* 00010000 */
    0x38}, /* 00111000 */

    /*
     * 6 0x06 '^F'
     */{
    0x10, /* 00010000 */
    0x38, /* 00111000 */
    0x7c, /* 01111100 */
    0xfe, /* 11111110 */
    0xfe, /* 11111110 */
    0x7c, /* 01111100 */
    0x10, /* 00010000 */
    0x38}, /* 00111000 */

    /*
     * 7 0x07 '^G'
     */{
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x18, /* 00011000 */
    0x3c, /* 00111100 */
    0x3c, /* 00111100 */
    0x18, /* 00011000 */
    0x00, /* 00000000 */
    0x00}, /* 00000000 */

    /*
     * 8 0x08 '^H'
     */{
    0xff, /* 11111111 */
    0xff, /* 11111111 */
    0xe7, /* 11100111 */
    0xc3, /* 11000011 */
    0xc3, /* 11000011 */
    0xe7, /* 11100111 */
    0xff, /* 11111111 */
    0xff}, /* 11111111 */

    /*
     * 9 0x09 '^I'
     */{
    0x00, /* 00000000 */
    0x3c, /* 00111100 */
    0x66, /* 01100110 */
    0x42, /* 01000010 */
    0x42, /* 01000010 */
    0x66, /* 01100110 */
    0x3c, /* 00111100 */
    0x00}, /* 00000000 */

    /*
     * 10 0x0a '^J'
     */{
    0xff, /* 11111111 */
    0xc3, /* 11000011 */
    0x99, /* 10011001 */
    0xbd, /* 10111101 */
    0xbd, /* 10111101 */
    0x99, /* 10011001 */
    0xc3, /* 11000011 */
    0xff}, /* 11111111 */

    /*
     * 11 0x0b '^K'
     */{
    0x0f, /* 00001111 */
    0x07, /* 00000111 */
    0x0f, /* 00001111 */
    0x7d, /* 01111101 */
    0xcc, /* 11001100 */
    0xcc, /* 11001100 */
    0xcc, /* 11001100 */
    0x78}, /* 01111000 */

    /*
     * 12 0x0c '^L'
     */{
    0x3c, /* 00111100 */
    0x66, /* 01100110 */
    0x66, /* 01100110 */
    0x66, /* 01100110 */
    0x3c, /* 00111100 */
    0x18, /* 00011000 */
    0x7e, /* 01111110 */
    0x18},/* 00011000 */

    /*
     * 13 0x0d '^M'
     */{
    0x3f, /* 00111111 */
    0x33, /* 00110011 */
    0x3f, /* 00111111 */
    0x30, /* 00110000 */
    0x30, /* 00110000 */
    0x70, /* 01110000 */
    0xf0, /* 11110000 */
    0xe0}, /* 11100000 */

    /*
     * 14 0x0e '^N'
     */{
    0x7f, /* 01111111 */
    0x63, /* 01100011 */
    0x7f, /* 01111111 */
    0x63, /* 01100011 */
    0x63, /* 01100011 */
    0x67, /* 01100111 */
    0xe6, /* 11100110 */
    0xc0}, /* 11000000 */

    /*
     * 15 0x0f '^O'
     */{
    0x18, /* 00011000 */
    0xdb, /* 11011011 */
    0x3c, /* 00111100 */
    0xe7, /* 11100111 */
    0xe7, /* 11100111 */
    0x3c, /* 00111100 */
    0xdb, /* 11011011 */
    0x18}, /* 00011000 */

    /*
     * 16 0x10 '^P'
     */{
    0x80, /* 10000000 */
    0xe0, /* 11100000 */
    0xf8, /* 11111000 */
    0xfe, /* 11111110 */
    0xf8, /* 11111000 */
    0xe0, /* 11100000 */
    0x80, /* 10000000 */
    0x00}, /* 00000000 */

    /*
     * 17 0x11 '^Q'
     */{
    0x02, /* 00000010 */
    0x0e, /* 00001110 */
    0x3e, /* 00111110 */
    0xfe, /* 11111110 */
    0x3e, /* 00111110 */
    0x0e, /* 00001110 */
    0x02, /* 00000010 */
    0x00}, /* 00000000 */

    /*
     * 18 0x12 '^R'
     */{
    0x18, /* 00011000 */
    0x3c, /* 00111100 */
    0x7e, /* 01111110 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x7e, /* 01111110 */
    0x3c, /* 00111100 */
    0x18}, /* 00011000 */

    /*
     * 19 0x13 '^S'
     */{
    0x66, /* 01100110 */
    0x66, /* 01100110 */
    0x66, /* 01100110 */
    0x66, /* 01100110 */
    0x66, /* 01100110 */
    0x00, /* 00000000 */
    0x66, /* 01100110 */
    0x00}, /* 00000000 */

    /*
     * 20 0x14 '^T'
     */{
    0x7f, /* 01111111 */
    0xdb, /* 11011011 */
    0xdb, /* 11011011 */
    0x7b, /* 01111011 */
    0x1b, /* 00011011 */
    0x1b, /* 00011011 */
    0x1b, /* 00011011 */
    0x00}, /* 00000000 */

    /*
     * 21 0x15 '^U'
     */{
    0x3e, /* 00111110 */
    0x61, /* 01100001 */
    0x3c, /* 00111100 */
    0x66, /* 01100110 */
    0x66, /* 01100110 */
    0x3c, /* 00111100 */
    0x86, /* 10000110 */
    0x7c}, /* 01111100 */

    /*
     * 22 0x16 '^V'
     */{
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x7e, /* 01111110 */
    0x7e, /* 01111110 */
    0x7e, /* 01111110 */
    0x00}, /* 00000000 */

    /*
     * 23 0x17 '^W'
     */{
    0x18, /* 00011000 */
    0x3c, /* 00111100 */
    0x7e, /* 01111110 */
    0x18, /* 00011000 */
    0x7e, /* 01111110 */
    0x3c, /* 00111100 */
    0x18, /* 00011000 */
    0xff}, /* 11111111 */

    /*
     * 24 0x18 '^X'
     */{
    0x18, /* 00011000 */
    0x3c, /* 00111100 */
    0x7e, /* 01111110 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x00}, /* 00000000 */

    /*
     * 25 0x19 '^Y'
     */{
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x7e, /* 01111110 */
    0x3c, /* 00111100 */
    0x18, /* 00011000 */
    0x00}, /* 00000000 */

    /*
     * 26 0x1a '^Z'
     */{
    0x00, /* 00000000 */
    0x18, /* 00011000 */
    0x0c, /* 00001100 */
    0xfe, /* 11111110 */
    0x0c, /* 00001100 */
    0x18, /* 00011000 */
    0x00, /* 00000000 */
    0x00}, /* 00000000 */

    /*
     * 27 0x1b '^['
     */{
    0x00, /* 00000000 */
    0x30, /* 00110000 */
    0x60, /* 01100000 */
    0xfe, /* 11111110 */
    0x60, /* 01100000 */
    0x30, /* 00110000 */
    0x00, /* 00000000 */
    0x00}, /* 00000000 */

    /*
     * 28 0x1c '^\'
     */{
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0xc0, /* 11000000 */
    0xc0, /* 11000000 */
    0xc0, /* 11000000 */
    0xfe, /* 11111110 */
    0x00, /* 00000000 */
    0x00}, /* 00000000 */

    /*
     * 29 0x1d '^]'
     */{
    0x00, /* 00000000 */
    0x24, /* 00100100 */
    0x66, /* 01100110 */
    0xff, /* 11111111 */
    0x66, /* 01100110 */
    0x24, /* 00100100 */
    0x00, /* 00000000 */
    0x00}, /* 00000000 */

    /*
     * 30 0x1e '^^'
     */{
    0x00, /* 00000000 */
    0x18, /* 00011000 */
    0x3c, /* 00111100 */
    0x7e, /* 01111110 */
    0xff, /* 11111111 */
    0xff, /* 11111111 */
    0x00, /* 00000000 */
    0x00}, /* 00000000 */

    /*
     * 31 0x1f '^_'
     */{
    0x00, /* 00000000 */
    0xff, /* 11111111 */
    0xff, /* 11111111 */
    0x7e, /* 01111110 */
    0x3c, /* 00111100 */
    0x18, /* 00011000 */
    0x00, /* 00000000 */
    0x00}, /* 00000000 */

    /*
     * 32 0x20 ' '
     */{
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00}, /* 00000000 */

    /*
     * 33 0x21 '!'
     */{
    0x18, /* 00011000 */
    0x3c, /* 00111100 */
    0x3c, /* 00111100 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x00, /* 00000000 */
    0x18, /* 00011000 */
    0x00}, /* 00000000 */

    /*
     * 34 0x22 '"'
     */{
    0x66, /* 01100110 */
    0x66, /* 01100110 */
    0x24, /* 00100100 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00},/* 00000000 */

    /*
     * 35 0x23 '#'
     */{
    0x6c, /* 01101100 */
    0x6c, /* 01101100 */
    0xfe, /* 11111110 */
    0x6c, /* 01101100 */
    0xfe, /* 11111110 */
    0x6c, /* 01101100 */
    0x6c, /* 01101100 */
    0x00}, /* 00000000 */

    /*
     * 36 0x24 '$'
     */{
    0x18, /* 00011000 */
    0x3e, /* 00111110 */
    0x60, /* 01100000 */
    0x3c, /* 00111100 */
    0x06, /* 00000110 */
    0x7c, /* 01111100 */
    0x18, /* 00011000 */
    0x00}, /* 00000000 */

    /*
     * 37 0x25 '%'
     */{
    0x00, /* 00000000 */
    0xc6, /* 11000110 */
    0xcc, /* 11001100 */
    0x18, /* 00011000 */
    0x30, /* 00110000 */
    0x66, /* 01100110 */
    0xc6, /* 11000110 */
    0x00}, /* 00000000 */

    /*
     * 38 0x26 '&'
     */{
    0x38, /* 00111000 */
    0x6c, /* 01101100 */
    0x38, /* 00111000 */
    0x76, /* 01110110 */
    0xdc, /* 11011100 */
    0xcc, /* 11001100 */
    0x76, /* 01110110 */
    0x00}, /* 00000000 */

    /*
     * 39 0x27 '''
     */{
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x30, /* 00110000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00}, /* 00000000 */

    /*
     * 40 0x28 '('
     */{
    0x0c, /* 00001100 */
    0x18, /* 00011000 */
    0x30, /* 00110000 */
    0x30, /* 00110000 */
    0x30, /* 00110000 */
    0x18, /* 00011000 */
    0x0c, /* 00001100 */
    0x00}, /* 00000000 */

    /*
     * 41 0x29 ')'
     */{
    0x30, /* 00110000 */
    0x18, /* 00011000 */
    0x0c, /* 00001100 */
    0x0c, /* 00001100 */
    0x0c, /* 00001100 */
    0x18, /* 00011000 */
    0x30, /* 00110000 */
    0x00}, /* 00000000 */

    /*
     * 42 0x2a '*'
     */{
    0x00, /* 00000000 */
    0x66, /* 01100110 */
    0x3c, /* 00111100 */
    0xff, /* 11111111 */
    0x3c, /* 00111100 */
    0x66, /* 01100110 */
    0x00, /* 00000000 */
    0x00}, /* 00000000 */

    /*
     * 43 0x2b '+'
     */{
    0x00, /* 00000000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x7e, /* 01111110 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x00, /* 00000000 */
    0x00}, /* 00000000 */

    /*
     * 44 0x2c ','
     */{
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x30}, /* 00110000 */

    /*
     * 45 0x2d '-'
     */{
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x7e, /* 01111110 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00}, /* 00000000 */

    /*
     * 46 0x2e '.'
     */{
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x00}, /* 00000000 */

    /*
     * 47 0x2f '/'
     */{
    0x06, /* 00000110 */
    0x0c, /* 00001100 */
    0x18, /* 00011000 */
    0x30, /* 00110000 */
    0x60, /* 01100000 */
    0xc0, /* 11000000 */
    0x80, /* 10000000 */
    0x00}, /* 00000000 */

    /*
     * 48 0x30 '0'
     */{
    0x38, /* 00111000 */
    0x6c, /* 01101100 */
    0xc6, /* 11000110 */
    0xd6, /* 11010110 */
    0xc6, /* 11000110 */
    0x6c, /* 01101100 */
    0x38, /* 00111000 */
    0x00}, /* 00000000 */

    /*
     * 49 0x31 '1'
     */{
    0x18, /* 00011000 */
    0x38, /* 00111000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x7e, /* 01111110 */
    0x00}, /* 00000000 */

    /*
     * 50 0x32 '2'
     */{
    0x7c, /* 01111100 */
    0xc6, /* 11000110 */
    0x06, /* 00000110 */
    0x1c, /* 00011100 */
    0x30, /* 00110000 */
    0x66, /* 01100110 */
    0xfe, /* 11111110 */
    0x00}, /* 00000000 */

    /*
     * 51 0x33 '3'
     */{
    0x7c, /* 01111100 */
    0xc6, /* 11000110 */
    0x06, /* 00000110 */
    0x3c, /* 00111100 */
    0x06, /* 00000110 */
    0xc6, /* 11000110 */
    0x7c, /* 01111100 */
    0x00}, /* 00000000 */

    /*
     * 52 0x34 '4'
     */{
    0x1c, /* 00011100 */
    0x3c, /* 00111100 */
    0x6c, /* 01101100 */
    0xcc, /* 11001100 */
    0xfe, /* 11111110 */
    0x0c, /* 00001100 */
    0x1e, /* 00011110 */
    0x00}, /* 00000000 */

    /*
     * 53 0x35 '5'
     */{
    0xfe, /* 11111110 */
    0xc0, /* 11000000 */
    0xc0, /* 11000000 */
    0xfc, /* 11111100 */
    0x06, /* 00000110 */
    0xc6, /* 11000110 */
    0x7c, /* 01111100 */
    0x00}, /* 00000000 */

    /*
     * 54 0x36 '6'
     */{
    0x38, /* 00111000 */
    0x60, /* 01100000 */
    0xc0, /* 11000000 */
    0xfc, /* 11111100 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0x7c, /* 01111100 */
    0x00}, /* 00000000 */

    /*
     * 55 0x37 '7'
     */{
    0xfe, /* 11111110 */
    0xc6, /* 11000110 */
    0x0c, /* 00001100 */
    0x18, /* 00011000 */
    0x30, /* 00110000 */
    0x30, /* 00110000 */
    0x30, /* 00110000 */
    0x00}, /* 00000000 */

    /*
     * 56 0x38 '8'
     */{
    0x7c, /* 01111100 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0x7c, /* 01111100 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0x7c, /* 01111100 */
    0x00}, /* 00000000 */

    /*
     * 57 0x39 '9'
     */{
    0x7c, /* 01111100 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0x7e, /* 01111110 */
    0x06, /* 00000110 */
    0x0c, /* 00001100 */
    0x78, /* 01111000 */
    0x00}, /* 00000000 */

    /*
     * 58 0x3a ':'
     */{
    0x00, /* 00000000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x00}, /* 00000000 */

    /*
     * 59 0x3b ';'
     */{
    0x00, /* 00000000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x30}, /* 00110000 */

    /*
     * 60 0x3c '<'
     */{
    0x06, /* 00000110 */
    0x0c, /* 00001100 */
    0x18, /* 00011000 */
    0x30, /* 00110000 */
    0x18, /* 00011000 */
    0x0c, /* 00001100 */
    0x06, /* 00000110 */
    0x00}, /* 00000000 */

    /*
     * 61 0x3d '='
     */{
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x7e, /* 01111110 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x7e, /* 01111110 */
    0x00, /* 00000000 */
    0x00}, /* 00000000 */

    /*
     * 62 0x3e '>'
     */{
    0x60, /* 01100000 */
    0x30, /* 00110000 */
    0x18, /* 00011000 */
    0x0c, /* 00001100 */
    0x18, /* 00011000 */
    0x30, /* 00110000 */
    0x60, /* 01100000 */
    0x00}, /* 00000000 */

    /*
     * 63 0x3f '?'
     */{
    0x7c, /* 01111100 */
    0xc6, /* 11000110 */
    0x0c, /* 00001100 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x00, /* 00000000 */
    0x18, /* 00011000 */
    0x00}, /* 00000000 */

    /*
     * 64 0x40 '@'
     */{
    0x7c, /* 01111100 */
    0xc6, /* 11000110 */
    0xde, /* 11011110 */
    0xde, /* 11011110 */
    0xde, /* 11011110 */
    0xc0, /* 11000000 */
    0x78, /* 01111000 */
    0x00}, /* 00000000 */

    /*
     * 65 0x41 'A'
     */{
    0x38, /* 00111000 */
    0x6c, /* 01101100 */
    0xc6, /* 11000110 */
    0xfe, /* 11111110 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0x00}, /* 00000000 */

    /*
     * 66 0x42 'B'
     */{
    0xfc, /* 11111100 */
    0x66, /* 01100110 */
    0x66, /* 01100110 */
    0x7c, /* 01111100 */
    0x66, /* 01100110 */
    0x66, /* 01100110 */
    0xfc, /* 11111100 */
    0x00}, /* 00000000 */

    /*
     * 67 0x43 'C'
     */{
    0x3c, /* 00111100 */
    0x66, /* 01100110 */
    0xc0, /* 11000000 */
    0xc0, /* 11000000 */
    0xc0, /* 11000000 */
    0x66, /* 01100110 */
    0x3c, /* 00111100 */
    0x00}, /* 00000000 */

    /*
     * 68 0x44 'D'
     */{
    0xf8, /* 11111000 */
    0x6c, /* 01101100 */
    0x66, /* 01100110 */
    0x66, /* 01100110 */
    0x66, /* 01100110 */
    0x6c, /* 01101100 */
    0xf8, /* 11111000 */
    0x00}, /* 00000000 */

    /*
     * 69 0x45 'E'
     */{
    0xfe, /* 11111110 */
    0x62, /* 01100010 */
    0x68, /* 01101000 */
    0x78, /* 01111000 */
    0x68, /* 01101000 */
    0x62, /* 01100010 */
    0xfe, /* 11111110 */
    0x00}, /* 00000000 */

    /*
     * 70 0x46 'F'
     */{
    0xfe, /* 11111110 */
    0x62, /* 01100010 */
    0x68, /* 01101000 */
    0x78, /* 01111000 */
    0x68, /* 01101000 */
    0x60, /* 01100000 */
    0xf0, /* 11110000 */
    0x00}, /* 00000000 */

    /*
     * 71 0x47 'G'
     */{
    0x3c, /* 00111100 */
    0x66, /* 01100110 */
    0xc0, /* 11000000 */
    0xc0, /* 11000000 */
    0xce, /* 11001110 */
    0x66, /* 01100110 */
    0x3a, /* 00111010 */
    0x00}, /* 00000000 */

    /*
     * 72 0x48 'H'
     */{
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0xfe, /* 11111110 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0x00}, /* 00000000 */

    /*
     * 73 0x49 'I'
     */{
    0x3c, /* 00111100 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x3c, /* 00111100 */
    0x00}, /* 00000000 */

    /*
     * 74 0x4a 'J'
     */{
    0x1e, /* 00011110 */
    0x0c, /* 00001100 */
    0x0c, /* 00001100 */
    0x0c, /* 00001100 */
    0xcc, /* 11001100 */
    0xcc, /* 11001100 */
    0x78, /* 01111000 */
    0x00}, /* 00000000 */

    /*
     * 75 0x4b 'K'
     */{
    0xe6, /* 11100110 */
    0x66, /* 01100110 */
    0x6c, /* 01101100 */
    0x78, /* 01111000 */
    0x6c, /* 01101100 */
    0x66, /* 01100110 */
    0xe6, /* 11100110 */
    0x00}, /* 00000000 */

    /*
     * 76 0x4c 'L'
     */{
    0xf0, /* 11110000 */
    0x60, /* 01100000 */
    0x60, /* 01100000 */
    0x60, /* 01100000 */
    0x62, /* 01100010 */
    0x66, /* 01100110 */
    0xfe, /* 11111110 */
    0x00}, /* 00000000 */

    /*
     * 77 0x4d 'M'
     */{
    0xc6, /* 11000110 */
    0xee, /* 11101110 */
    0xfe, /* 11111110 */
    0xfe, /* 11111110 */
    0xd6, /* 11010110 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0x00}, /* 00000000 */

    /*
     * 78 0x4e 'N'
     */{
    0xc6, /* 11000110 */
    0xe6, /* 11100110 */
    0xf6, /* 11110110 */
    0xde, /* 11011110 */
    0xce, /* 11001110 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0x00}, /* 00000000 */

    /*
     * 79 0x4f 'O'
     */{
    0x7c, /* 01111100 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0x7c, /* 01111100 */
    0x00}, /* 00000000 */

    /*
     * 80 0x50 'P'
     */{
    0xfc, /* 11111100 */
    0x66, /* 01100110 */
    0x66, /* 01100110 */
    0x7c, /* 01111100 */
    0x60, /* 01100000 */
    0x60, /* 01100000 */
    0xf0, /* 11110000 */
    0x00}, /* 00000000 */

    /*
     * 81 0x51 'Q'
     */{
    0x7c, /* 01111100 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0xce, /* 11001110 */
    0x7c, /* 01111100 */
    0x0e}, /* 00001110 */

    /*
     * 82 0x52 'R'
     */{
    0xfc, /* 11111100 */
    0x66, /* 01100110 */
    0x66, /* 01100110 */
    0x7c, /* 01111100 */
    0x6c, /* 01101100 */
    0x66, /* 01100110 */
    0xe6, /* 11100110 */
    0x00}, /* 00000000 */

    /*
     * 83 0x53 'S'
     */{
    0x3c, /* 00111100 */
    0x66, /* 01100110 */
    0x30, /* 00110000 */
    0x18, /* 00011000 */
    0x0c, /* 00001100 */
    0x66, /* 01100110 */
    0x3c, /* 00111100 */
    0x00}, /* 00000000 */

    /*
     * 84 0x54 'T'
     */{
    0x7e, /* 01111110 */
    0x7e, /* 01111110 */
    0x5a, /* 01011010 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x3c, /* 00111100 */
    0x00}, /* 00000000 */

    /*
     * 85 0x55 'U'
     */{
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0x7c, /* 01111100 */
    0x00}, /* 00000000 */

    /*
     * 86 0x56 'V'
     */{
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0x6c, /* 01101100 */
    0x38, /* 00111000 */
    0x00}, /* 00000000 */

    /*
     * 87 0x57 'W'
     */{
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0xd6, /* 11010110 */
    0xd6, /* 11010110 */
    0xfe, /* 11111110 */
    0x6c, /* 01101100 */
    0x00}, /* 00000000 */

    /*
     * 88 0x58 'X'
     */{
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0x6c, /* 01101100 */
    0x38, /* 00111000 */
    0x6c, /* 01101100 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0x00}, /* 00000000 */

    /*
     * 89 0x59 'Y'
     */{
    0x66, /* 01100110 */
    0x66, /* 01100110 */
    0x66, /* 01100110 */
    0x3c, /* 00111100 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x3c, /* 00111100 */
    0x00}, /* 00000000 */

    /*
     * 90 0x5a 'Z'
     */{
    0xfe, /* 11111110 */
    0xc6, /* 11000110 */
    0x8c, /* 10001100 */
    0x18, /* 00011000 */
    0x32, /* 00110010 */
    0x66, /* 01100110 */
    0xfe, /* 11111110 */
    0x00}, /* 00000000 */

    /*
     * 91 0x5b '['
     */{
    0x3c, /* 00111100 */
    0x30, /* 00110000 */
    0x30, /* 00110000 */
    0x30, /* 00110000 */
    0x30, /* 00110000 */
    0x30, /* 00110000 */
    0x3c, /* 00111100 */
    0x00}, /* 00000000 */

    /*
     * 92 0x5c '\'
     */{
    0xc0, /* 11000000 */
    0x60, /* 01100000 */
    0x30, /* 00110000 */
    0x18, /* 00011000 */
    0x0c, /* 00001100 */
    0x06, /* 00000110 */
    0x02, /* 00000010 */
    0x00}, /* 00000000 */

    /*
     * 93 0x5d ']'
     */{
    0x3c, /* 00111100 */
    0x0c, /* 00001100 */
    0x0c, /* 00001100 */
    0x0c, /* 00001100 */
    0x0c, /* 00001100 */
    0x0c, /* 00001100 */
    0x3c, /* 00111100 */
    0x00}, /* 00000000 */

    /*
     * 94 0x5e '^'
     */{
    0x10, /* 00010000 */
    0x38, /* 00111000 */
    0x6c, /* 01101100 */
    0xc6, /* 11000110 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00}, /* 00000000 */

    /*
     * 95 0x5f '_'
     */{
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0xff}, /* 11111111 */

    /*
     * 96 0x60 '`'
     */{
    0x30, /* 00110000 */
    0x18, /* 00011000 */
    0x0c, /* 00001100 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00}, /* 00000000 */

    /*
     * 97 0x61 'a'
     */{
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x78, /* 01111000 */
    0x0c, /* 00001100 */
    0x7c, /* 01111100 */
    0xcc, /* 11001100 */
    0x76, /* 01110110 */
    0x00}, /* 00000000 */

    /*
     * 98 0x62 'b'
     */{
    0xe0, /* 11100000 */
    0x60, /* 01100000 */
    0x7c, /* 01111100 */
    0x66, /* 01100110 */
    0x66, /* 01100110 */
    0x66, /* 01100110 */
    0xdc, /* 11011100 */
    0x00}, /* 00000000 */

    /*
     * 99 0x63 'c'
     */{
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x7c, /* 01111100 */
    0xc6, /* 11000110 */
    0xc0, /* 11000000 */
    0xc6, /* 11000110 */
    0x7c, /* 01111100 */
    0x00}, /* 00000000 */

    /*
     * 100 0x64 'd'
     */{
    0x1c, /* 00011100 */
    0x0c, /* 00001100 */
    0x7c, /* 01111100 */
    0xcc, /* 11001100 */
    0xcc, /* 11001100 */
    0xcc, /* 11001100 */
    0x76, /* 01110110 */
    0x00}, /* 00000000 */

    /*
     * 101 0x65 'e'
     */{
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x7c, /* 01111100 */
    0xc6, /* 11000110 */
    0xfe, /* 11111110 */
    0xc0, /* 11000000 */
    0x7c, /* 01111100 */
    0x00}, /* 00000000 */

    /*
     * 102 0x66 'f'
     */{
    0x3c, /* 00111100 */
    0x66, /* 01100110 */
    0x60, /* 01100000 */
    0xf8, /* 11111000 */
    0x60, /* 01100000 */
    0x60, /* 01100000 */
    0xf0, /* 11110000 */
    0x00}, /* 00000000 */

    /*
     * 103 0x67 'g'
     */{
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x76, /* 01110110 */
    0xcc, /* 11001100 */
    0xcc, /* 11001100 */
    0x7c, /* 01111100 */
    0x0c, /* 00001100 */
    0xf8}, /* 11111000 */

    /*
     * 104 0x68 'h'
     */{
    0xe0, /* 11100000 */
    0x60, /* 01100000 */
    0x6c, /* 01101100 */
    0x76, /* 01110110 */
    0x66, /* 01100110 */
    0x66, /* 01100110 */
    0xe6, /* 11100110 */
    0x00}, /* 00000000 */

    /*
     * 105 0x69 'i'
     */{
    0x18, /* 00011000 */
    0x00, /* 00000000 */
    0x38, /* 00111000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x3c, /* 00111100 */
    0x00}, /* 00000000 */

    /*
     * 106 0x6a 'j'
     */{
    0x06, /* 00000110 */
    0x00, /* 00000000 */
    0x06, /* 00000110 */
    0x06, /* 00000110 */
    0x06, /* 00000110 */
    0x66, /* 01100110 */
    0x66, /* 01100110 */
    0x3c}, /* 00111100 */

    /*
     * 107 0x6b 'k'
     */{
    0xe0, /* 11100000 */
    0x60, /* 01100000 */
    0x66, /* 01100110 */
    0x6c, /* 01101100 */
    0x78, /* 01111000 */
    0x6c, /* 01101100 */
    0xe6, /* 11100110 */
    0x00}, /* 00000000 */

    /*
     * 108 0x6c 'l'
     */{
    0x38, /* 00111000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x3c, /* 00111100 */
    0x00}, /* 00000000 */

    /*
     * 109 0x6d 'm'
     */{
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0xec, /* 11101100 */
    0xfe, /* 11111110 */
    0xd6, /* 11010110 */
    0xd6, /* 11010110 */
    0xd6, /* 11010110 */
    0x00}, /* 00000000 */

    /*
     * 110 0x6e 'n'
     */{
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0xdc, /* 11011100 */
    0x66, /* 01100110 */
    0x66, /* 01100110 */
    0x66, /* 01100110 */
    0x66, /* 01100110 */
    0x00}, /* 00000000 */

    /*
     * 111 0x6f 'o'
     */{
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x7c, /* 01111100 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0x7c, /* 01111100 */
    0x00}, /* 00000000 */

    /*
     * 112 0x70 'p'
     */{
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0xdc, /* 11011100 */
    0x66, /* 01100110 */
    0x66, /* 01100110 */
    0x7c, /* 01111100 */
    0x60, /* 01100000 */
    0xf0}, /* 11110000 */

    /*
     * 113 0x71 'q'
     */{
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x76, /* 01110110 */
    0xcc, /* 11001100 */
    0xcc, /* 11001100 */
    0x7c, /* 01111100 */
    0x0c, /* 00001100 */
    0x1e}, /* 00011110 */

    /*
     * 114 0x72 'r'
     */{
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0xdc, /* 11011100 */
    0x76, /* 01110110 */
    0x60, /* 01100000 */
    0x60, /* 01100000 */
    0xf0, /* 11110000 */
    0x00}, /* 00000000 */

    /*
     * 115 0x73 's'
     */{
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x7e, /* 01111110 */
    0xc0, /* 11000000 */
    0x7c, /* 01111100 */
    0x06, /* 00000110 */
    0xfc, /* 11111100 */
    0x00}, /* 00000000 */

    /*
     * 116 0x74 't'
     */{
    0x30, /* 00110000 */
    0x30, /* 00110000 */
    0xfc, /* 11111100 */
    0x30, /* 00110000 */
    0x30, /* 00110000 */
    0x36, /* 00110110 */
    0x1c, /* 00011100 */
    0x00}, /* 00000000 */

    /*
     * 117 0x75 'u'
     */{
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0xcc, /* 11001100 */
    0xcc, /* 11001100 */
    0xcc, /* 11001100 */
    0xcc, /* 11001100 */
    0x76, /* 01110110 */
    0x00}, /* 00000000 */

    /*
     * 118 0x76 'v'
     */{
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0x6c, /* 01101100 */
    0x38, /* 00111000 */
    0x00}, /* 00000000 */

    /*
     * 119 0x77 'w'
     */{
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0xc6, /* 11000110 */
    0xd6, /* 11010110 */
    0xd6, /* 11010110 */
    0xfe, /* 11111110 */
    0x6c, /* 01101100 */
    0x00}, /* 00000000 */

    /*
     * 120 0x78 'x'
     */{
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0xc6, /* 11000110 */
    0x6c, /* 01101100 */
    0x38, /* 00111000 */
    0x6c, /* 01101100 */
    0xc6, /* 11000110 */
    0x00}, /* 00000000 */

    /*
     * 121 0x79 'y'
     */{
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0x7e, /* 01111110 */
    0x06, /* 00000110 */
    0xfc}, /* 11111100 */

    /*
     * 122 0x7a 'z'
     */{
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x7e, /* 01111110 */
    0x4c, /* 01001100 */
    0x18, /* 00011000 */
    0x32, /* 00110010 */
    0x7e, /* 01111110 */
    0x00}, /* 00000000 */

    /*
     * 123 0x7b '{'
     */{
    0x0e, /* 00001110 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x70, /* 01110000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x0e, /* 00001110 */
    0x00}, /* 00000000 */

    /*
     * 124 0x7c '|'
     */{
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x00}, /* 00000000 */

    /*
     * 125 0x7d '}'
     */{
    0x70, /* 01110000 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x0e, /* 00001110 */
    0x18, /* 00011000 */
    0x18, /* 00011000 */
    0x70, /* 01110000 */
    0x00}, /* 00000000 */

    /*
     * 126 0x7e '~'
     */{
    0x76, /* 01110110 */
    0xdc, /* 11011100 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00, /* 00000000 */
    0x00}, /* 00000000 */

    /*
     * 127 0x7f ''
     */{
    0x00, /* 00000000 */
    0x10, /* 00010000 */
    0x38, /* 00111000 */
    0x6c, /* 01101100 */
    0xc6, /* 11000110 */
    0xc6, /* 11000110 */
    0xfe, /* 11111110 */
    0x00}, /* 00000000 */

#if 0
    /*
     * 128 0x80 '�'
     */{
    0x7c, /* 01111100 */
    0xc6, /* 11000110 */
    0xc0, /* 11000000 */
    0xc0, /* 11000000 */
    0xc6, /* 11000110 */
    0x7c, /* 01111100 */
    0x0c, /* 00001100 */
    0x78}, /* 01111000 */

    /*
     * 129 0x81 '�'
     */{
    0xcc, /* 11001100 */
    0x00, /* 00000000 */
    0xcc, /* 11001100 */
    0xcc, /* 11001100 */
    0xcc, /* 11001100 */
    0xcc, /* 11001100 */
    0x76, /* 01110110 */
    0x00} /* 00000000 */

#endif   
  
};




/////////////////////////////////////////////////////////////////////////////

//#include "close_code.h"

#endif /* SDL_font_h_ */

/* vi: set ts=4 sw=4 expandtab: */
